"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["main-navigation-sticky.plugin"],{253:(t,i,e)=>{e.r(i),e.d(i,{default:()=>r});var s=e(610),n=e(102);class r extends window.PluginBaseClass{init(){this.navParentContainer=document.body.querySelector(this.options.navParentContainer),this.navContainer=this.navParentContainer.querySelector(this.options.navContainer);let t=document.body.querySelector("#mainNavigation");this.scrollY=t?t.getBoundingClientRect().top:this.options.visiblePos,this._assignDebouncedOnScrollEvent(),this._registerEvents()}_registerEvents(){document.addEventListener("scroll",this._debouncedOnScroll,!1),window.addEventListener("DOMContentLoaded",t=>{window.scrollY>0&&(this.scrollY=window.scrollY+this.scrollY),this._toggleVisibility()})}_assignDebouncedOnScrollEvent(){this._debouncedOnScroll=s.Z.debounce(this._toggleVisibility.bind(this),this.options.scrollDebounceTime)}_toggleVisibility(){if(this._isInAllowedViewports()){if(window.scrollY>this.scrollY){if(!this.el.classList.contains(this.options.visibleCls)){let t=this.navContainer.cloneNode(!0);this.el.append(t),this.el.classList.add(this.options.visibleCls),window.PluginManager.initializePlugin("FlyoutMenu","[data-flyout-menu]"),window.PluginManager.initializePlugin("RemoteClick","[data-remote-click]")}}else this.el.innerHTML="",this.el.classList.remove(this.options.visibleCls)}}_isInAllowedViewports(){return n.Z.isXXL()||n.Z.isXL()}}r.options={scrollDebounceTime:10,visiblePos:250,visibleCls:"show",navParentContainer:".nav-main",navContainer:"#mainNavigation"}},610:(t,i,e)=>{e.d(i,{Z:()=>s});class s{static debounce(t,i){let e,s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return function(){for(var n=arguments.length,r=Array(n),o=0;o<n;o++)r[o]=arguments[o];s&&!e&&setTimeout(t.bind(t,...r),0),clearTimeout(e),e=setTimeout(t.bind(t,...r),i)}}}},102:(t,i,e)=>{e.d(i,{Z:()=>n});var s=e(610);class n{_registerEvents(){window.addEventListener("DOMContentLoaded",this._onDOMContentLoaded.bind(this)),window.addEventListener("resize",s.Z.debounce(this._onResize.bind(this),200),{capture:!0,passive:!0})}_onDOMContentLoaded(){this._dispatchEvents()}_onResize(){this._viewportHasChanged(n.getCurrentViewport())&&(this._dispatchEvents(),this._dispatchViewportEvent("Viewport/hasChanged"))}_dispatchEvents(){n.isXS()?this._dispatchViewportEvent("Viewport/isXS"):n.isSM()?this._dispatchViewportEvent("Viewport/isSM"):n.isMD()?this._dispatchViewportEvent("Viewport/isMD"):n.isLG()?this._dispatchViewportEvent("Viewport/isLG"):n.isXL()?this._dispatchViewportEvent("Viewport/isXL"):n.isXXL()&&this._dispatchViewportEvent("Viewport/isXXL")}_viewportHasChanged(t){let i=t!==this.currentViewport;return i&&(this.previousViewport=this.currentViewport,this.currentViewport=t),i}_dispatchViewportEvent(t){document.$emitter.publish(t,{previousViewport:this.previousViewport})}static isXS(){return"XS"===n.getCurrentViewport()}static isSM(){return"SM"===n.getCurrentViewport()}static isMD(){return"MD"===n.getCurrentViewport()}static isLG(){return"LG"===n.getCurrentViewport()}static isXL(){return"XL"===n.getCurrentViewport()}static isXXL(){return"XXL"===n.getCurrentViewport()}static getCurrentViewport(){return window.getComputedStyle(document.documentElement).getPropertyValue("--sw-current-breakpoint").replace(/['"]+/g,"").toUpperCase()}constructor(){this.previousViewport=null,this.currentViewport=n.getCurrentViewport(),this._registerEvents()}}}}]);